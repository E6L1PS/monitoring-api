plugins {
    id 'java'
    id 'war'
    id "io.freefair.aspectj.post-compile-weaving" version "6.4.1"
}

ext {
    lombokVersion = '1.18.30'
    mapstructVersion = '1.5.5.Final'
    lombokMapstructBindingVersion = '0.2.0'
    jakartaServletApiVersion = '6.0.0'
    jacksonDatabindVersion = '2.16.1'
    liquibaseVersion = '4.25.1'
    postgresqlVersion = '42.7.1'

    testcontainersVersion = '1.19.4'
    assertjVersion = '3.25.2'
    mockitoVersion = '5.10.0'
    junitVersion = '5.8.1'

    javaMainClass = "ru.ylab.App"
}

group 'ru.ylab'
version '1.0-SNAPSHOT'

allprojects {
    tasks.withType(JavaCompile).configureEach {
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    repositories {
        mavenCentral()
    }
}

jar {
    duplicatesStrategy = 'fail'
    manifest.attributes('Main-Class': javaMainClass)

    // Exclude META-INF/LICENSE.txt from the jar
    exclude('META-INF/LICENSE.txt')
    exclude('META-INF/NOTICE.txt')

    // For di-container module
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.register('runApplication', JavaExec) {
    mainClass = javaMainClass
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in

    systemProperty 'file.encoding', 'UTF-8'
    jvmArgs('-Dfile.encoding=UTF-8')
}

dependencies {
    implementation project(":di-container")

    implementation "org.aspectj:aspectjrt:1.9.21"
    implementation "org.aspectj:aspectjweaver:1.9.21"

    compileOnly "jakarta.servlet:jakarta.servlet-api:$jakartaServletApiVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"

    implementation "org.liquibase:liquibase-core:$liquibaseVersion"
    implementation "org.postgresql:postgresql:$postgresqlVersion"

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"

    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
}