plugins {
    id 'java'
    id 'war'
}

ext {
    springVersion = '6.1.4'
    springSecurityVersion = '6.2.2'
    springdocVersion = '2.3.0'
    jsonwebtokenVersion = '0.12.5'
    hikariVersion = '5.1.0'
    lombokVersion = '1.18.30'
    mapstructVersion = '1.5.5.Final'
    lombokMapstructBindingVersion = '0.2.0'
    slf4jVersion = '2.0.12'
    jakartaServletApiVersion = '6.0.0'
    jacksonDatabindVersion = '2.16.1'
    liquibaseVersion = '4.25.1'
    postgresqlVersion = '42.7.1'
    jaywayJsonpathVersion = '2.9.0'
    aspectjVersion = '1.9.21'
    testcontainersVersion = '1.19.4'
    assertjVersion = '3.25.2'
    mockitoVersion = '5.10.0'
    junitVersion = '5.8.1'

    javaMainClass = "ru.ylab.App"
}

group 'ru.ylab'
version '1.0-SNAPSHOT'

allprojects {
    tasks.withType(JavaCompile).configureEach {
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        options.compilerArgs << "-parameters"
    }

    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation "org.springframework:spring-context:$springVersion"
    implementation "org.springframework:spring-web:$springVersion"
    implementation "org.springframework:spring-webmvc:$springVersion"
    implementation "org.springframework:spring-aspects:$springVersion"
    implementation "org.springframework:spring-jdbc:$springVersion"
    implementation "org.springframework.security:spring-security-core:$springSecurityVersion"
    implementation "org.springframework.security:spring-security-web:$springSecurityVersion"
    implementation "org.springframework.security:spring-security-config:$springSecurityVersion"
    implementation "io.jsonwebtoken:jjwt-api:$jsonwebtokenVersion"
    implementation "io.jsonwebtoken:jjwt-impl:$jsonwebtokenVersion"
    implementation "io.jsonwebtoken:jjwt-jackson:$jsonwebtokenVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:$springdocVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

    implementation "com.zaxxer:HikariCP:$hikariVersion"

    implementation "jakarta.servlet:jakarta.servlet-api:$jakartaServletApiVersion"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatabindVersion"

    implementation "org.liquibase:liquibase-core:$liquibaseVersion"
    implementation "org.postgresql:postgresql:$postgresqlVersion"

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"

    testImplementation "com.jayway.jsonpath:json-path:$jaywayJsonpathVersion"
    testImplementation "org.springframework.security:spring-security-test:$springSecurityVersion"
    testImplementation "org.springframework:spring-test:$springVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
}