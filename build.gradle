plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

ext {
    springdocVersion = '2.3.0'
    jsonwebtokenVersion = '0.12.5'
    lombokVersion = '1.18.30'
    mapstructVersion = '1.5.5.Final'
    lombokMapstructBindingVersion = '0.2.0'
    jaywayJsonpathVersion = '2.9.0'
    testcontainersVersion = '1.19.4'

    javaMainClass = "ru.ylab.MonitoringApplication"
}

group 'ru.ylab'
version '1.0-SNAPSHOT'

allprojects {
    tasks.withType(JavaCompile).configureEach {
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        options.compilerArgs << "-parameters"
    }

    repositories {
        mavenCentral()
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.55
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                minimum = 0.6
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

check.dependsOn jacocoTestReport
jacocoTestCoverageVerification.dependsOn jacocoTestReport

dependencies {
    implementation project(':logging-spring-boot-starter')
    implementation project(':auditing-spring-boot-starter')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:$springdocVersion"

    implementation "io.jsonwebtoken:jjwt-api:$jsonwebtokenVersion"
    implementation "io.jsonwebtoken:jjwt-impl:$jsonwebtokenVersion"
    implementation "io.jsonwebtoken:jjwt-jackson:$jsonwebtokenVersion"

    implementation 'org.liquibase:liquibase-core'
    implementation 'org.postgresql:postgresql'

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"


    testImplementation "com.jayway.jsonpath:json-path:$jaywayJsonpathVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}